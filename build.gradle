plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

runClient.doFirst {
	args = ['--username', "_ImBanana"]
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven { url 'https://maven.wispforest.io' }
	mavenCentral()
	maven {
		name 'm2-dv8tion'
		url 'https://m2.dv8tion.net/releases'
	}

	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}

	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}

	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}

	maven { url 'https://jitpack.io' }
}

loom {
	accessWidenerPath = file("src/main/resources/nexusutils.accesswidener")

    runs {
		// This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=nexusutils"
 
			runDir "build/datagen"
		}
	}
}

// Add the generated resources to the main source set
sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	modImplementation "dev.emi:trinkets:${project.trinkets_version}"

	modImplementation annotationProcessor("io.wispforest:owo-lib:${project.owo_version}")
	include "io.wispforest:owo-sentinel:${project.owo_version}"

	modLocalRuntime "net.fabricmc:fabric-language-kotlin:1.12.1+kotlin.2.0.20"
	modLocalRuntime "com.terraformersmc:modmenu:11.0.2"
	modLocalRuntime "maven.modrinth:auth-me:8.0.0+1.21-fabric"
	modLocalRuntime "maven.modrinth:simple-voice-chat:fabric-1.21.1-2.5.21"
	modLocalRuntime "maven.modrinth:cloth-config:15.0.130+fabric"

	// JDA Java Discord API
	modImplementation(include("net.dv8tion:JDA:${project.jda_version}") {
		exclude module: 'opus-java'
	})
	modImplementation(include('org.jetbrains.kotlin:kotlin-stdlib:1.2.30'))
	include "com.fasterxml.jackson.core:jackson-databind:2.16.0"
	include "net.sf.trove4j:trove4j:3.0.3"
	include "org.apache.commons:commons-collections4:4.4"
	include "com.google.code.findbugs:jsr305:3.0.2"
	include "org.jetbrains:annotations:16.0.1"
	include "com.neovisionaries:nv-websocket-client:2.10"
	include "com.squareup.okhttp3:okhttp:4.12.0"
	include "com.fasterxml.jackson.core:jackson-annotations:2.13.1"
	include "com.fasterxml.jackson.core:jackson-core:2.13.1"
	include "com.squareup.okio:okio-jvm:3.9.0"
	include "com.neovisionaries:nv-websocket-client:2.14"
}

def replaceProperties = [
		version: project.version,
		minecraft_version: minecraft_version,
		fabric_api_version: fabric_version,
		fabric_version: loader_version,
		owo_version: owo_version,
		trinkets_version: trinkets_version,
]

processResources {
	inputs.properties replaceProperties

	filesMatching("fabric.mod.json") {
		expand replaceProperties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}